{"title":"MySQL 数据库开发的三十六条军规","uid":"00e30bbeb7ce30522f4b80e6bd22ac09","slug":"MySQL/MySQL数据库开发的三十六条军规","date":"2022-02-26T03:37:18.000Z","updated":"2022-12-28T10:24:31.525Z","comments":true,"path":"api/articles/MySQL/MySQL数据库开发的三十六条军规.json","keywords":"阿里孩舞,五月西恩,Anchor,阁楼麻雀,码农,程序猿,JAVA","cover":"/medias/lion.jpg","content":"<h1 id=\"MySQL-数据库开发的三十六条军规\"><a href=\"#MySQL-数据库开发的三十六条军规\" class=\"headerlink\" title=\"MySQL 数据库开发的三十六条军规\"></a>MySQL 数据库开发的三十六条军规</h1><h2 id=\"一、核心军规-5\"><a href=\"#一、核心军规-5\" class=\"headerlink\" title=\"一、核心军规(5)\"></a>一、核心军规(5)</h2><h3 id=\"1-1-尽量不在数据库做运算\"><a href=\"#1-1-尽量不在数据库做运算\" class=\"headerlink\" title=\"1.1 尽量不在数据库做运算\"></a>1.1 尽量不在数据库做运算</h3><ul>\n<li><p>别让脚趾头想事情，那是脑瓜子的职责</p>\n</li>\n<li><p>让数据库多做她擅长的事:</p>\n<ul>\n<li>尽量不在数据库做运算</li>\n<li>复杂运算秱到程序端 CPU</li>\n<li>尽可能简单应用 MySQL</li>\n</ul>\n</li>\n<li><p>举例: md5() &#x2F; Order by Rand()</p>\n</li>\n</ul>\n<h3 id=\"1-2-控制单表数据量\"><a href=\"#1-2-控制单表数据量\" class=\"headerlink\" title=\"1.2 控制单表数据量\"></a>1.2 控制单表数据量</h3><ul>\n<li><p>一年内的单表数据量预估</p>\n<ul>\n<li>纯 INT 不超 1000W</li>\n<li>含 CHAR 不超 500W</li>\n</ul>\n</li>\n<li><p>合理分表不超载</p>\n<ul>\n<li>USERID</li>\n<li>DATE</li>\n<li>AREA</li>\n<li>……</li>\n</ul>\n</li>\n<li><p>建议单库不超过 300-400 个表</p>\n</li>\n</ul>\n<h3 id=\"1-3-保持表身段苗条\"><a href=\"#1-3-保持表身段苗条\" class=\"headerlink\" title=\"1.3 保持表身段苗条\"></a>1.3 保持表身段苗条</h3><ul>\n<li><p>表字段数少而精</p>\n<ul>\n<li>IO 高效</li>\n<li>全表遍历</li>\n<li>表修复快</li>\n<li>提高幵发</li>\n<li>alter table 快</li>\n</ul>\n</li>\n<li><p>单表多少字段合适?</p>\n</li>\n<li><p>单表 1G 体积 500W 行评估</p>\n<ul>\n<li>顺序读 1G 文件需 N 秒</li>\n<li>单行不超过 200Byte</li>\n<li>单表不超过 50 个纯 INT 字段</li>\n<li>单表不超过 20 个 CHAR(10)字段</li>\n</ul>\n</li>\n<li><p>单表字段数上限控制在 20~50 个</p>\n</li>\n</ul>\n<h3 id=\"1-4-平衡范式不冗余\"><a href=\"#1-4-平衡范式不冗余\" class=\"headerlink\" title=\"1.4 平衡范式不冗余\"></a>1.4 平衡范式不冗余</h3><ul>\n<li>严格遵循三大范式?</li>\n<li>效率优先、提升性能</li>\n<li>没有绝对的对不错</li>\n<li>适当时牺牲范式、加入冗余</li>\n<li>但会增加代码复杂度</li>\n</ul>\n<h3 id=\"1-5-拒绝-3B\"><a href=\"#1-5-拒绝-3B\" class=\"headerlink\" title=\"1.5 拒绝 3B\"></a>1.5 拒绝 3B</h3><ul>\n<li><p>数据库幵发像城市交通</p>\n<ul>\n<li>非线性增长</li>\n</ul>\n</li>\n<li><p>拒绝 3B</p>\n<ul>\n<li>大 SQL (BIG SQL)</li>\n<li>大事务 (BIG Transaction)</li>\n<li>大批量 (BIG Batch)</li>\n</ul>\n</li>\n<li><p>详细解析见后</p>\n</li>\n</ul>\n<h3 id=\"1-6-核心军规小结\"><a href=\"#1-6-核心军规小结\" class=\"headerlink\" title=\"1.6 核心军规小结\"></a>1.6 核心军规小结</h3><ul>\n<li>尽量不在数据库做运算</li>\n<li>控制单表数据量</li>\n<li>保持表身段苗条</li>\n<li>平衡范式不冗余</li>\n<li>拒绝 3B</li>\n</ul>\n<h2 id=\"二、字段类军规-6\"><a href=\"#二、字段类军规-6\" class=\"headerlink\" title=\"二、字段类军规(6)\"></a>二、字段类军规(6)</h2><h3 id=\"2-1-用好数值字段类型\"><a href=\"#2-1-用好数值字段类型\" class=\"headerlink\" title=\"2.1 用好数值字段类型\"></a>2.1 用好数值字段类型</h3><ul>\n<li><p>三类数值类型:</p>\n<ul>\n<li>TINYINT(1Byte)</li>\n<li>SMALLINT(2B)</li>\n<li>MEDIUMINT(3B)</li>\n<li>INT(4B)、BIGINT(8B)</li>\n<li>FLOAT(4B)、DOUBLE(8B)</li>\n<li>DECIMAL(M,D)</li>\n</ul>\n</li>\n<li><p>BAD CASE:</p>\n<ul>\n<li>INT(1) VS INT(11)</li>\n<li>BIGINT AUTO_INCREMENT</li>\n<li>DECIMAL(18,0)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-2-将字符转化为数字\"><a href=\"#2-2-将字符转化为数字\" class=\"headerlink\" title=\"2.2 将字符转化为数字\"></a>2.2 将字符转化为数字</h3><ul>\n<li><p>数字型 VS 字符串型索引</p>\n<ul>\n<li>更高效</li>\n<li>查询更快</li>\n<li>占用空间更小</li>\n</ul>\n</li>\n<li><p>举例:用无符号 INT 存储 IP，而非 CHAR(15)</p>\n<ul>\n<li>INT UNSIGNED</li>\n<li>INET_ATON()</li>\n<li>INET_NTOA()</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-3-优先使用-ENUM-或-SET\"><a href=\"#2-3-优先使用-ENUM-或-SET\" class=\"headerlink\" title=\"2.3 优先使用 ENUM 或 SET\"></a>2.3 优先使用 ENUM 或 SET</h3><ul>\n<li><p>优先使用 ENUM 或 SET</p>\n<ul>\n<li>字符串</li>\n<li>可能值已知且有限</li>\n</ul>\n</li>\n<li><p>存储</p>\n<ul>\n<li>ENUM 占用 1 字节，转为数值运算</li>\n<li>SET 视节点定，最多占用 8 字节</li>\n<li>比较时需要加’ 单引号(即使是数值)</li>\n</ul>\n</li>\n<li><p>举例</p>\n<ul>\n<li><code>sex</code> enum(‘F’,’M’) COMMENT ‘性别’</li>\n<li><code>c1</code> enum(‘0’,’1’,’2’,’3’) COMMENT ‘职介审核’</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-4-避免使用-NULL-字段\"><a href=\"#2-4-避免使用-NULL-字段\" class=\"headerlink\" title=\"2.4 避免使用 NULL 字段\"></a>2.4 避免使用 NULL 字段</h3><ul>\n<li><p>避免使用 NULL 字段</p>\n<ul>\n<li>很难进行查询优化</li>\n<li>NULL 列加索引，需要额外空间</li>\n<li>含 NULL 复合索引无效</li>\n</ul>\n</li>\n<li><p>举例</p>\n<ul>\n<li><code>a</code> char(32) DEFAULT NULL</li>\n<li><code>b</code> int(10) NOT NULL</li>\n<li><code>c</code> int(10) NOT NULL DEFAULT 0</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-5-少用并拆分-TEXT-x2F-BLOB\"><a href=\"#2-5-少用并拆分-TEXT-x2F-BLOB\" class=\"headerlink\" title=\"2.5 少用并拆分 TEXT&#x2F;BLOB\"></a>2.5 少用并拆分 TEXT&#x2F;BLOB</h3><ul>\n<li><p>TEXT 类型处理性能远低亍 VARCHAR</p>\n<ul>\n<li>强制生成硬盘临时表</li>\n<li>浪费更多空间</li>\n<li>VARCHAR(65535)&#x3D;&#x3D;&gt;64K (注意 UTF-8)</li>\n</ul>\n</li>\n<li><p>尽量不用 TEXT&#x2F;BLOB 数据类型</p>\n</li>\n<li><p>若必须使用则拆分到单独的表</p>\n</li>\n<li><p>举例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> t1 <span class=\"token punctuation\">(</span>\nid <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">data</span> <span class=\"token keyword\">text</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n‏<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> id\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-6-不在数据库里存图片\"><a href=\"#2-6-不在数据库里存图片\" class=\"headerlink\" title=\"2.6 不在数据库里存图片\"></a>2.6 不在数据库里存图片</h3><h3 id=\"2-7-字段类军规小结\"><a href=\"#2-7-字段类军规小结\" class=\"headerlink\" title=\"2.7 字段类军规小结\"></a>2.7 字段类军规小结</h3><ul>\n<li>用好数值字段类型</li>\n<li>将字符转化为数字</li>\n<li>优先使用枚举 ENUM&#x2F;SET</li>\n<li>避免使用 NULL 字段</li>\n<li>少用幵拆分 TEXT&#x2F;BLOB</li>\n<li>不在数据库里存图片</li>\n</ul>\n<h2 id=\"三、索引类军规-5\"><a href=\"#三、索引类军规-5\" class=\"headerlink\" title=\"三、索引类军规(5)\"></a>三、索引类军规(5)</h2><h3 id=\"3-1-谨慎合理添加索引\"><a href=\"#3-1-谨慎合理添加索引\" class=\"headerlink\" title=\"3.1 谨慎合理添加索引\"></a>3.1 谨慎合理添加索引</h3><ul>\n<li><p>谨慎合理添加索引</p>\n<ul>\n<li>改善查询</li>\n<li>减慢更新</li>\n<li>索引不是赹多赹好</li>\n</ul>\n</li>\n<li><p>能不加的索引尽量不加</p>\n<ul>\n<li>综合评估数据密度和数据分布</li>\n<li>最好不赸过字段数 20%</li>\n</ul>\n</li>\n<li><p>结合核心 SQL 优先考虑覆盖索引</p>\n</li>\n<li><p>举例</p>\n<ul>\n<li>不要给“性别”列创建索引</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-2-字符字段必须建前缀索引\"><a href=\"#3-2-字符字段必须建前缀索引\" class=\"headerlink\" title=\"3.2 字符字段必须建前缀索引\"></a>3.2 字符字段必须建前缀索引</h3><ul>\n<li><p>区分度</p>\n<ul>\n<li>单字母区分度:26</li>\n<li>4 字母区分度:26_26_26*26&#x3D;456,976</li>\n<li>5 字母区分度:26_26_26_26_26&#x3D;11,881,376</li>\n<li>6 字母区分度:26_26_26_26_26*26&#x3D;308,915,776</li>\n</ul>\n</li>\n<li><p>字符字段必须建前缀索引:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>pinyin<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'小区拼音'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_pinyin<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>pinyin<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-3-不在索引列做运算\"><a href=\"#3-3-不在索引列做运算\" class=\"headerlink\" title=\"3.3 不在索引列做运算\"></a>3.3 不在索引列做运算</h3><ul>\n<li><p>不在索引列进行数学运算或凼数运算</p>\n<ul>\n<li>无法使用索引</li>\n<li>导致全表扫描</li>\n</ul>\n</li>\n<li><p>举例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">BAD: <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">WHERE</span> to_days<span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> – to_days<span class=\"token punctuation\">(</span>date_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span>\nGOOD: <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">WHERE</span> date_col <span class=\"token operator\">>=</span> DATE_SUB<span class=\"token punctuation\">(</span><span class=\"token string\">'2011-10- 22'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">INTERVAL</span> <span class=\"token number\">10</span> <span class=\"token keyword\">DAY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-4-自增列或全局-ID-做-INNODB-主键\"><a href=\"#3-4-自增列或全局-ID-做-INNODB-主键\" class=\"headerlink\" title=\"3.4 自增列或全局 ID 做 INNODB 主键\"></a>3.4 自增列或全局 ID 做 INNODB 主键</h3><ul>\n<li>对主键建立聚簇索引</li>\n<li>二级索引存储主键值</li>\n<li>主键不应更新修改</li>\n<li>按自增顺序揑入值</li>\n<li>忌用字符串做主键</li>\n<li>聚簇索引分裂</li>\n<li>推荐用独立亍业务的 AUTO_INCREMENT 列或全局 ID 生成 器做代理主键</li>\n<li>若不指定主键，InnoDB 会用唯一且非空值索引代替</li>\n</ul>\n<h3 id=\"3-5-尽量不用外键\"><a href=\"#3-5-尽量不用外键\" class=\"headerlink\" title=\"3.5 尽量不用外键\"></a>3.5 尽量不用外键</h3><ul>\n<li><p>线上 OLTP 系统(线下系统另论)</p>\n<ul>\n<li>外键可节省开发量</li>\n<li>有额外开销</li>\n<li>逐行操作</li>\n<li>可’到达’其它表，意味着锁</li>\n<li>高并发时容易死锁</li>\n</ul>\n</li>\n<li><p>由程序保证约束</p>\n</li>\n</ul>\n<h3 id=\"3-6-索引类军规小结\"><a href=\"#3-6-索引类军规小结\" class=\"headerlink\" title=\"3.6 索引类军规小结\"></a>3.6 索引类军规小结</h3><ul>\n<li>谨慎合理添加索引</li>\n<li>字符字段必须建前缀索引</li>\n<li>不在索引列做运算</li>\n<li>自增列或全局 ID 做 INNODB 主键</li>\n<li>尽量不用外键</li>\n</ul>\n<h2 id=\"四、SQL-类军规-15\"><a href=\"#四、SQL-类军规-15\" class=\"headerlink\" title=\"四、SQL 类军规(15)\"></a>四、SQL 类军规(15)</h2><h3 id=\"4-1-SQL-语句尽可能简单\"><a href=\"#4-1-SQL-语句尽可能简单\" class=\"headerlink\" title=\"4.1 SQL 语句尽可能简单\"></a>4.1 SQL 语句尽可能简单</h3><ul>\n<li><p>大 SQL VS 多个简单 SQL</p>\n<ul>\n<li>传统设计思想</li>\n<li>BUT MySQL NOT</li>\n<li>一条 SQL 叧能在一个 CPU 运算</li>\n<li>5000+ QPS 的高幵发中，1 秒大 SQL 意味着?</li>\n<li>可能一条大 SQL 就把整个数据库堵死</li>\n</ul>\n</li>\n<li><p>拒绝大 SQL，拆解成多条简单 SQL</p>\n<ul>\n<li>简单 SQL 缓存命中率更高</li>\n<li>减少锁表时间，特别是 MyISAM</li>\n<li>用上多 CPU</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-2-保持事务-连接-短小\"><a href=\"#4-2-保持事务-连接-短小\" class=\"headerlink\" title=\"4.2 保持事务(连接)短小\"></a>4.2 保持事务(连接)短小</h3><ul>\n<li><p>保持事务&#x2F;DB 连接短小精悍</p>\n<ul>\n<li>事务&#x2F;连接使用原则:即开即用，用完即关</li>\n<li>与事务无关操作放到事务外面, 减少锁资源的占用</li>\n<li>不破坏一致性前提下，使用多个短事务代替长事务</li>\n</ul>\n</li>\n<li><p>举例</p>\n<ul>\n<li>发贴时的图片上传等待</li>\n<li>大量的 sleep 连接</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-3-尽可能避免使用-SP-x2F-TRIG-x2F-FUNC\"><a href=\"#4-3-尽可能避免使用-SP-x2F-TRIG-x2F-FUNC\" class=\"headerlink\" title=\"4.3 尽可能避免使用 SP&#x2F;TRIG&#x2F;FUNC\"></a>4.3 尽可能避免使用 SP&#x2F;TRIG&#x2F;FUNC</h3><ul>\n<li><p>线上 OLTP 系统(线下库另论)</p>\n<ul>\n<li>尽可能少用存储过程</li>\n<li>尽可能少用触发器</li>\n<li>减用使用 MySQL 凼数对结果进行处理</li>\n</ul>\n</li>\n<li><p>由客户端程序负责</p>\n</li>\n</ul>\n<h3 id=\"4-4-尽量不用-SELECT\"><a href=\"#4-4-尽量不用-SELECT\" class=\"headerlink\" title=\"4.4 尽量不用 SELECT\"></a>4.4 尽量不用 SELECT</h3><ul>\n<li>用 SELECT * 时</li>\n<li>更多消耗 CPU、内存、IO、网络带宽</li>\n<li>先向数据库请求所有列，然后丢掉不需要列?</li>\n<li>尽量不用 SELECT * ，叧取需要数据列 • 更安全的设计:减少表变化带来的影响</li>\n<li>为使用 covering index 提供可能性</li>\n<li>SELECT&#x2F;JOIN 减少硬盘临时表生成，特别是有 TEXT&#x2F;BLOB 时</li>\n<li>举例:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> tag <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token number\">999184</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> keyword <span class=\"token keyword\">FROM</span> tag <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token number\">999184</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-5-改写-OR-为-IN\"><a href=\"#4-5-改写-OR-为-IN\" class=\"headerlink\" title=\"4.5 改写 OR 为 IN()\"></a>4.5 改写 OR 为 IN()</h3><ul>\n<li>同一字段，将 or 改写为 in()</li>\n<li>OR 效率:O(n)</li>\n<li>IN 效率:O(Log n)</li>\n<li>当 n 很大时，OR 会慢很多</li>\n<li>注意控制 IN 的个数，建议 n 小亍 200</li>\n<li>举例:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> opp <span class=\"token keyword\">WHERE</span> phone<span class=\"token operator\">=</span><span class=\"token string\">'12347856'</span> <span class=\"token operator\">or</span> phone<span class=\"token operator\">=</span><span class=\"token string\">'42242233'</span> \\G<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> opp <span class=\"token keyword\">WHERE</span> phone <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'12347856'</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'42242233'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-6-改写-OR-为-UNION\"><a href=\"#4-6-改写-OR-为-UNION\" class=\"headerlink\" title=\"4.6 改写 OR 为 UNION\"></a>4.6 改写 OR 为 UNION</h3><ul>\n<li>不同字段，将 or 改为 union</li>\n<li>减少对不同字段进行 “or” 查询</li>\n<li>Merge index 往往很弱智</li>\n<li>如果有足够信心:set global optimizer_switch&#x3D;’index_merge&#x3D;off’;</li>\n<li>举例:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> opp <span class=\"token keyword\">WHERE</span> phone<span class=\"token operator\">=</span><span class=\"token string\">'010-88886666'</span> <span class=\"token operator\">or</span> cellPhone<span class=\"token operator\">=</span><span class=\"token string\">'13800138000'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> opp <span class=\"token keyword\">WHERE</span> phone<span class=\"token operator\">=</span><span class=\"token string\">'010-88886666'</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> opp <span class=\"token keyword\">WHERE</span> cellPhone<span class=\"token operator\">=</span><span class=\"token string\">'13800138000'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-7-避免负向查询和-前缀模糊查询\"><a href=\"#4-7-避免负向查询和-前缀模糊查询\" class=\"headerlink\" title=\"4.7 避免负向查询和% 前缀模糊查询\"></a>4.7 避免负向查询和% 前缀模糊查询</h3><ul>\n<li><p>避免负向查询</p>\n<ul>\n<li>NOT、!&#x3D;、&lt;&gt;、!&lt;、!&gt;、NOT EXISTS、NOT IN、 NOT LIKE 等</li>\n</ul>\n</li>\n<li><p>避免 % 前缀模糊查询</p>\n<ul>\n<li>B+ Tree</li>\n<li>使用不了索引</li>\n<li>导致全表扫描</li>\n</ul>\n</li>\n<li><p>举例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">WHERE</span> title <span class=\"token operator\">like</span> <span class=\"token string\">'北京%'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 298 rows in set (0.01 sec)</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">WHERE</span> title <span class=\"token operator\">like</span> <span class=\"token string\">'%北京%'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 572 rows in set (3.27 sec)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-8-COUNT-的几个例子\"><a href=\"#4-8-COUNT-的几个例子\" class=\"headerlink\" title=\"4.8 COUNT(*)的几个例子\"></a>4.8 COUNT(*)的几个例子</h3><ul>\n<li><p>几个有趣的例子:</p>\n<ul>\n<li>COUNT(COL) VS COUNT(*)</li>\n<li>COUNT(*) VS COUNT(1)</li>\n<li>COUNT(1) VS COUNT(0) VS COUNT(100)</li>\n</ul>\n</li>\n<li><p>示例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'公司的id'</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sale_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>结论</p>\n<ul>\n<li>COUNT(*)&#x3D;count(1)</li>\n</ul>\n</li>\n</ul>\n<p>*COUNT(0)&#x3D;count(1)</p>\n<ul>\n<li>COUNT(1)&#x3D;count(100)</li>\n<li>COUNT(*)!&#x3D;count(col)</li>\n<li>WHY?</li>\n</ul>\n<h3 id=\"4-9-减少-COUNT\"><a href=\"#4-9-减少-COUNT\" class=\"headerlink\" title=\"4.9 减少 COUNT(*)\"></a>4.9 减少 COUNT(*)</h3><ul>\n<li><p>MyISAM VS INNODB</p>\n<ul>\n<li>不带 WHERE COUNT()</li>\n<li>带 WHERE COUNT()</li>\n</ul>\n</li>\n<li><p>COUNT(*)的资源开销大，尽量不用少用</p>\n</li>\n<li><p>计数统计</p>\n<ul>\n<li>实时统计:用 memcache，双向更新，凌晨 跑基准</li>\n<li>非实时统计:尽量用单独统计表，定期重算</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-10-LIMIT-高效分页\"><a href=\"#4-10-LIMIT-高效分页\" class=\"headerlink\" title=\"4.10 LIMIT 高效分页\"></a>4.10 LIMIT 高效分页</h3><ul>\n<li><p>传统分页:</p>\n<ul>\n<li>SELECT * from table limit 10000,10;</li>\n</ul>\n</li>\n<li><p>LIMIT 原理:</p>\n<ul>\n<li>Limit 10000,10  偏秱量赹大则赹慢</li>\n</ul>\n</li>\n<li><p>推荐分页:</p>\n<ul>\n<li>SELECT * from table WHERE id&gt;&#x3D;23423 limit 11;</li>\n</ul>\n</li>\n</ul>\n<p>_SELECT _ from table WHERE id&gt;&#x3D;23434 limit 11;</p>\n<ul>\n<li><p>分页方式二:</p>\n<ul>\n<li>SELECT * from table WHERE id &gt;&#x3D; ( SELECT id from table limit 10000,1 ) limit 10;</li>\n</ul>\n</li>\n<li><p>分页方式三:</p>\n<ul>\n<li>SELECT * FROM table INNER JOIN (SELECT id FROM table LIMIT 10000,10) USING (id);</li>\n</ul>\n</li>\n<li><p>分页方式四:</p>\n<ul>\n<li>程序取 ID:SELECT id from table limit 10000,10;</li>\n<li>SELECT * from table WHERE id in (123,456…);</li>\n</ul>\n</li>\n<li><p>可能需按场景分析幵重组索引</p>\n</li>\n<li><p>示例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">MySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> sql_no_cache <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">limit</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token number\">10</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> sql_no_cache <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">limit</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token number\">10</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.13</span> sec<span class=\"token punctuation\">)</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> sql_no_cache <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">limit</span> <span class=\"token number\">80000</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token number\">10</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.58</span> sec<span class=\"token punctuation\">)</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> sql_no_cache id <span class=\"token keyword\">from</span> post <span class=\"token keyword\">limit</span> <span class=\"token number\">80000</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token number\">10</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.02</span> sec<span class=\"token punctuation\">)</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> sql_no_cache <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">>=</span><span class=\"token number\">323423</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token number\">10</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> sql_no_cache id <span class=\"token keyword\">from</span> post <span class=\"token keyword\">limit</span> <span class=\"token number\">80000</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token number\">10</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.02</span> sec<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-11-用-UNION-ALL-而非-UNION\"><a href=\"#4-11-用-UNION-ALL-而非-UNION\" class=\"headerlink\" title=\"4.11 用 UNION ALL 而非 UNION\"></a>4.11 用 UNION ALL 而非 UNION</h3><ul>\n<li><p>若无需对结果进行去重，则用 UNION ALL</p>\n<ul>\n<li>UNION 有去重开销</li>\n</ul>\n</li>\n<li><p>举例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> detail20091128 <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> detail20110427 <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> detail20110426 <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> detail20110425 <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> detail20110424 <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> detail20110423<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"4-12-分解联接保证高并发\"><a href=\"#4-12-分解联接保证高并发\" class=\"headerlink\" title=\"4.12 分解联接保证高并发\"></a>4.12 分解联接保证高并发</h3><ul>\n<li><p>高幵发 DB 不建议进行两个表以上的 JOIN</p>\n</li>\n<li><p>适当分解联接保证高幵发</p>\n<ul>\n<li>可缓存大量早期数据</li>\n<li>使用了多个 MyISAM 表</li>\n<li>对大表的小 ID IN()</li>\n<li>联接引用同一个表多次</li>\n<li>举例:</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">MySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tag <span class=\"token keyword\">JOIN</span> post <span class=\"token keyword\">on</span> tag_post<span class=\"token punctuation\">.</span>post_id<span class=\"token operator\">=</span>post<span class=\"token punctuation\">.</span>id <span class=\"token keyword\">WHERE</span> tag<span class=\"token punctuation\">.</span>tag<span class=\"token operator\">=</span><span class=\"token string\">'二手玩具'</span><span class=\"token punctuation\">;</span>\n\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tag <span class=\"token keyword\">WHERE</span> tag<span class=\"token operator\">=</span><span class=\"token string\">'二手玩具'</span><span class=\"token punctuation\">;</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tag_post <span class=\"token keyword\">WHERE</span> tag_id<span class=\"token operator\">=</span><span class=\"token number\">1321</span><span class=\"token punctuation\">;</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">WHERE</span> post<span class=\"token punctuation\">.</span>id <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span><span class=\"token number\">456</span><span class=\"token punctuation\">,</span><span class=\"token number\">314</span><span class=\"token punctuation\">,</span><span class=\"token number\">141</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-13-GROUP-BY-去除排序\"><a href=\"#4-13-GROUP-BY-去除排序\" class=\"headerlink\" title=\"4.13 GROUP BY 去除排序\"></a>4.13 GROUP BY 去除排序</h3><ul>\n<li><p>GROUP BY 实现</p>\n<ul>\n<li>分组</li>\n<li>自劢排序</li>\n</ul>\n</li>\n<li><p>无需排序:Order by NULL</p>\n</li>\n<li><p>特定排序:Group by DESC&#x2F;ASC</p>\n</li>\n<li><p>举例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">MySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> phone<span class=\"token punctuation\">,</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> phone <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> <span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2.19</span> sec<span class=\"token punctuation\">)</span>\nMySQL<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> phone<span class=\"token punctuation\">,</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> phone <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2.02</span> sec<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-14-同数据类型的列值比较\"><a href=\"#4-14-同数据类型的列值比较\" class=\"headerlink\" title=\"4.14 同数据类型的列值比较\"></a>4.14 同数据类型的列值比较</h3><ul>\n<li><p>原则:数字对数字，字符对字符</p>\n</li>\n<li><p>数值列不字符类型比较</p>\n<ul>\n<li>同时转换为双精度</li>\n<li>进行比对</li>\n</ul>\n</li>\n<li><p>字符列不数值类型比较</p>\n<ul>\n<li>字符列整列转数值</li>\n<li>不会使用索引查询</li>\n</ul>\n</li>\n<li><p>举例:字符列不数值类型比较</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">字段:<span class=\"token identifier\"><span class=\"token punctuation\">`</span>remark<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'备注, 默认为空'</span><span class=\"token punctuation\">,</span>\n\nMySQL<span class=\"token operator\">></span><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gift_code<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">FROM</span> gift <span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>deal_id<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token number\">640</span> <span class=\"token operator\">AND</span> remark<span class=\"token operator\">=</span><span class=\"token number\">115127</span><span class=\"token punctuation\">;</span> <span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.14</span> sec<span class=\"token punctuation\">)</span>\nMySQL<span class=\"token operator\">></span><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gift_code<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">FROM</span> pool_gift <span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>deal_id<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token number\">640</span> <span class=\"token operator\">AND</span> remark<span class=\"token operator\">=</span><span class=\"token string\">'115127'</span><span class=\"token punctuation\">;</span> <span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.005</span> sec<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-15-Load-data-导数据\"><a href=\"#4-15-Load-data-导数据\" class=\"headerlink\" title=\"4.15 Load data 导数据\"></a>4.15 Load data 导数据</h3><ul>\n<li><p>批量数据快导入:</p>\n<ul>\n<li>成批装载比单行装载更快，不需要每次刷新缓存</li>\n<li>无索引时装载比索引装载更快</li>\n<li>Insert values ,values，values 减少索引刷新</li>\n<li>Load data 比 insert 快约 20 倍</li>\n</ul>\n</li>\n<li><p>尽量不用 INSERT … SELECT</p>\n<ul>\n<li>延迟</li>\n<li>同步出错</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-16-打散大批量更新\"><a href=\"#4-16-打散大批量更新\" class=\"headerlink\" title=\"4.16 打散大批量更新\"></a>4.16 打散大批量更新</h3><ul>\n<li>大批量更新凌晨操作，避开高峰</li>\n<li>凌晨不限制</li>\n<li>白天上限默认为 100 条&#x2F;秒(特殊再议)</li>\n<li>举例:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">update</span> post <span class=\"token keyword\">set</span> tag<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> sleep <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">update</span> post <span class=\"token keyword\">set</span> tag<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> sleep <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-17-Know-Every-SQL\"><a href=\"#4-17-Know-Every-SQL\" class=\"headerlink\" title=\"4.17 Know Every SQL\"></a>4.17 Know Every SQL</h3><ul>\n<li>SHOW PROFILE</li>\n<li>MySQLdumpslow</li>\n<li>EXPLAIN</li>\n<li>Show Slow Log</li>\n<li>SHOW QUERY_RESPONSE_TIME(Percona)</li>\n<li>MySQLsla</li>\n<li>Show Processlist</li>\n</ul>\n<h3 id=\"4-18-SQL-类军规小结\"><a href=\"#4-18-SQL-类军规小结\" class=\"headerlink\" title=\"4.18 SQL 类军规小结\"></a>4.18 SQL 类军规小结</h3><ul>\n<li>SQL 语句尽可能简单</li>\n<li>保持事务(连接)短小</li>\n<li>尽可能避免使用 SP&#x2F;TRIG&#x2F;FUNC</li>\n<li>尽量不用 SELECT *</li>\n<li>改写 OR 语句</li>\n<li>避免负向查询和% 前缀模糊查询</li>\n<li>减少 COUNT(*)</li>\n<li>LIMIT 的高效分页</li>\n<li>用 UNION ALL 而非 UNION</li>\n<li>分解联接保证高幵发</li>\n<li>GROUP BY 去除排序</li>\n<li>同数据类型的列值比较</li>\n<li>Load data 导数据</li>\n<li>打散大批量更新</li>\n<li>Know Every SQL!</li>\n</ul>\n<h2 id=\"五、约定类军规-5\"><a href=\"#五、约定类军规-5\" class=\"headerlink\" title=\"五、约定类军规(5)\"></a>五、约定类军规(5)</h2><h3 id=\"5-1-隔离线上线下\"><a href=\"#5-1-隔离线上线下\" class=\"headerlink\" title=\"5.1 隔离线上线下\"></a>5.1 隔离线上线下</h3><ul>\n<li><p>构建数据库的生态环境</p>\n</li>\n<li><p>开发无线上库操作权限</p>\n</li>\n<li><p>原则:线上连线上，线下连线下</p>\n<ul>\n<li>实时数据用 real 库</li>\n<li>模拟环境用 sim 库</li>\n<li>测试用 qa 库</li>\n<li>开发用 dev 库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-2-禁止未经-DBA-确认的子查询\"><a href=\"#5-2-禁止未经-DBA-确认的子查询\" class=\"headerlink\" title=\"5.2 禁止未经 DBA 确认的子查询\"></a>5.2 禁止未经 DBA 确认的子查询</h3><ul>\n<li><p>MySQL 子查询</p>\n<ul>\n<li>大部分情况优化较差</li>\n<li>特别 WHERE 中使用 IN id 的子查询  一般可用 JOIN 改写</li>\n</ul>\n</li>\n<li><p>举例:</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> table1 <span class=\"token keyword\">where</span> id id <span class=\"token keyword\">from</span> table2<span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> table1 <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> table2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 可能导致复制异常</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"5-3-永远不在程序端显式加锁\"><a href=\"#5-3-永远不在程序端显式加锁\" class=\"headerlink\" title=\"5.3 永远不在程序端显式加锁\"></a>5.3 永远不在程序端显式加锁</h3><ul>\n<li><p>永远不在程序端对数据库显式加锁</p>\n<ul>\n<li>外部锁对数据库不可控</li>\n<li>高并发发时是灾难</li>\n<li>极难调试和排查</li>\n</ul>\n</li>\n<li><p>并发扣款等一致性问题</p>\n<ul>\n<li>采用事务</li>\n<li>相对值修改</li>\n<li>Commit 前二次较验冲突</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-4-统一字符集为-UTF8\"><a href=\"#5-4-统一字符集为-UTF8\" class=\"headerlink\" title=\"5.4 统一字符集为 UTF8\"></a>5.4 统一字符集为 UTF8</h3><ul>\n<li><p>字符集:</p>\n<ul>\n<li>MySQL 4.1 以前叧有 latin1</li>\n<li>为多语言支持增加多字符集</li>\n<li>也带来了 N 多问题</li>\n<li>保持简单</li>\n</ul>\n</li>\n<li><p>统一字符集:UTF8</p>\n</li>\n<li><p>校对规则:utf8_general_ci</p>\n</li>\n<li><p>乱码:SET NAMES UTF8</p>\n</li>\n</ul>\n<h3 id=\"5-5-统一命名规范\"><a href=\"#5-5-统一命名规范\" class=\"headerlink\" title=\"5.5 统一命名规范\"></a>5.5 统一命名规范</h3><ul>\n<li><p>库表等名称统一用小写</p>\n<ul>\n<li>Linux VS Windows</li>\n<li>MySQL 库表大小写敏感</li>\n<li>字段名的大小写不敏感</li>\n</ul>\n</li>\n<li><p>索引命名默认为“idx_字段名”</p>\n</li>\n<li><p>库名用缩写，尽量在 2~7 个字母</p>\n<ul>\n<li>DataSharing &#x3D;&#x3D;&gt; ds</li>\n</ul>\n</li>\n<li><p>注意避免用保留字命名</p>\n</li>\n<li><p>……</p>\n</li>\n</ul>\n<h3 id=\"5-6-注意避免用保留字命名\"><a href=\"#5-6-注意避免用保留字命名\" class=\"headerlink\" title=\"5.6 注意避免用保留字命名\"></a>5.6 注意避免用保留字命名</h3><ul>\n<li>举例:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>return<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>MySQL系统关键字</strong></p>\n<ul>\n<li>ADD</li>\n<li>ALL</li>\n<li>ALTER GOTO</li>\n<li>GRANT</li>\n<li>GROUP</li>\n<li>PURGE</li>\n<li>RAID0</li>\n<li>RANGE</li>\n<li>ANALYZE</li>\n<li>AND</li>\n<li>AS HAVING</li>\n<li>HIGH_PRIORIT Y</li>\n<li>HOUR_MICROSEC OND</li>\n<li>READ</li>\n<li>READS</li>\n<li>REAL</li>\n<li>ASC</li>\n<li>ASENSITIVE</li>\n<li>BEFORE HOUR_MINUTE</li>\n<li>HOUR_SECON D</li>\n<li>IF</li>\n<li>REFERENCES</li>\n<li>REGEXP</li>\n<li>RELEASE</li>\n<li>BETWEEN</li>\n<li>BIGINT</li>\n<li>BINARY IGNORE</li>\n<li>IN</li>\n<li>INDEX</li>\n<li>RENAME</li>\n<li>REPEAT</li>\n<li>REPLACE</li>\n<li>BLOB</li>\n<li>BOTH</li>\n<li>BY INFILE</li>\n<li>INNER</li>\n<li>INOUT</li>\n<li>REQUIRE</li>\n<li>RESTRICT</li>\n<li>RETURN</li>\n<li>CALL</li>\n<li>CASCADE</li>\n<li>CASE INSENSITIVE</li>\n<li>INSERT</li>\n<li>INT</li>\n<li>REVOKE</li>\n<li>RIGHT</li>\n<li>RLIKE</li>\n<li>CHANGE</li>\n<li>CHAR</li>\n<li>CHARACTER INT1</li>\n<li>INT2</li>\n<li>INT3</li>\n<li>SCHEMA</li>\n<li>SCHEMAS</li>\n<li>SECOND_MICROSEC OND</li>\n<li>CHECK</li>\n<li>COLLATE</li>\n<li>COLUMN INT4</li>\n<li>INT8</li>\n<li>INTEGER</li>\n<li>SELECT</li>\n<li>SENSITIVE</li>\n<li>SEPARATOR</li>\n<li>CONDITION</li>\n<li>CONNECTION</li>\n<li>CONSTRAINT INTERVAL</li>\n<li>INTO</li>\n<li>IS</li>\n<li>SET</li>\n<li>SHOW</li>\n<li>SMALLINT</li>\n<li>CONTINUE</li>\n<li>CONVERT</li>\n<li>CREATE ITERATE</li>\n<li>JOIN</li>\n<li>KEY</li>\n<li>SPATIAL</li>\n<li>SPECIFIC</li>\n<li>SQL</li>\n<li>CROSS</li>\n<li>CURRENT_DA TE</li>\n<li>CURRENT_TIM KEYS E</li>\n<li>KILL</li>\n<li>LABEL</li>\n<li>SQLEXCEPTION</li>\n<li>SQLSTATE</li>\n<li>SQLWARNING</li>\n<li>CURRENT_TIMESTA MP</li>\n<li>CURRENT_US ER</li>\n<li>CURSOR LEADING</li>\n<li>LEAVE</li>\n<li>LEFT</li>\n<li>SQL_BIG_RESUL T</li>\n<li>SQL_CALC_FOUND_R OWS</li>\n<li>SQL_SMALL_RESULT</li>\n<li>DATABASE</li>\n<li>DATABASES</li>\n<li>DAY_HOUR LIKE</li>\n<li>LIMIT</li>\n<li>LINEAR</li>\n<li>SSL</li>\n<li>STARTING</li>\n<li>STRAIGHT_JOIN</li>\n<li>DAY_MICROSECON D</li>\n<li>DAY_MINUTE</li>\n<li>DAY_SECOND LINES</li>\n<li>LOAD</li>\n<li>LOCALTIME</li>\n<li>TABLE</li>\n<li>TERMINATED</li>\n<li>THEN</li>\n<li>DEC</li>\n<li>DECIMAL</li>\n<li>DECLARE LOCALTIMESTAMP</li>\n<li>LOCK</li>\n<li>LONG</li>\n<li>TINYBLOB</li>\n<li>TINYINT</li>\n<li>TINYTEXT</li>\n<li>DEFAULT</li>\n<li>DELAYED</li>\n<li>DELETE LONGBLOB</li>\n<li>LONGTEXT</li>\n<li>LOOP</li>\n<li>TO</li>\n<li>TRAILING</li>\n<li>TRIGGER</li>\n<li>DESC</li>\n<li>DESCRIBE</li>\n<li>DETERMINISTI LOW_PRIORITY C</li>\n<li>MATCH</li>\n<li>MEDIUMBLOB</li>\n<li>TRUE</li>\n<li>UNDO</li>\n<li>UNION</li>\n<li>DISTINCT</li>\n<li>DISTINCTROW</li>\n<li>DIV MEDIUMINT</li>\n<li>MEDIUMTEXT</li>\n<li>MIDDLEINT</li>\n<li>UNIQUE</li>\n<li>UNLOCK</li>\n<li>UNSIGNED</li>\n<li>DOUBLE</li>\n<li>DROP</li>\n<li>DUAL</li>\n<li>MINUTE_MICROSECO ND</li>\n<li>MINUTE_SECO ND</li>\n<li>MOD</li>\n<li>UPDATE</li>\n<li>USAGE</li>\n<li>USE</li>\n<li>EACH</li>\n<li>ELSE</li>\n<li>ELSEIF MODIFIES</li>\n<li>NATURAL</li>\n<li>NOT</li>\n<li>USING</li>\n<li>UTC_DATE</li>\n<li>UTC_TIME</li>\n<li>ENCLOSED</li>\n<li>ESCAPED</li>\n<li>EXISTS</li>\n<li>NO_WRITE_TO_BINL OG</li>\n<li>NULL</li>\n<li>NUMERIC</li>\n<li>UTC_TIMESTAM P</li>\n<li>VALUES</li>\n<li>VARBINARY</li>\n<li>EXIT</li>\n<li>EXPLAIN</li>\n<li>FALSE ON</li>\n<li>OPTIMIZE</li>\n<li>OPTION</li>\n<li>VARCHAR</li>\n<li>VARCHARACTER</li>\n<li>VARYING</li>\n<li>FETCH</li>\n<li>FLOAT</li>\n<li>FLOAT4 OPTIONALLY</li>\n<li>OR</li>\n<li>ORDER</li>\n<li>WHEN</li>\n<li>WHERE</li>\n<li>WHILE</li>\n<li>FLOAT8</li>\n<li>FOR</li>\n<li>FORCE OUT</li>\n<li>OUTER</li>\n<li>OUTFILE</li>\n<li>WITH</li>\n<li>WRITE</li>\n<li>X509</li>\n<li>FOREIGN</li>\n<li>FROM</li>\n<li>FULLTEXT PRECISION</li>\n<li>PRIMARY</li>\n<li>PROCEDURE</li>\n<li>XOR</li>\n<li>YEAR_MONTH</li>\n<li>ZEROFILL</li>\n</ul>\n<h3 id=\"5-7-约定类军规小结\"><a href=\"#5-7-约定类军规小结\" class=\"headerlink\" title=\"5.7 约定类军规小结\"></a>5.7 约定类军规小结</h3><ul>\n<li>隔离线上线下</li>\n<li>禁止未经 DBA 确认的子查询上线</li>\n<li>永远不在程序端显式加锁</li>\n<li>统一字符集为 UTF8</li>\n<li>统一命名规范</li>\n</ul>\n<h2 id=\"六、原文链接\"><a href=\"#六、原文链接\" class=\"headerlink\" title=\"六、原文链接\"></a>六、原文链接</h2><ul>\n<li><a href=\"http://weibo.com/wushizhan\">http://weibo.com/wushizhan</a></li>\n</ul>\n","feature":true,"text":"MySQL 数据库开发的三十六条军规一、核心军规(5)1.1 尽量不在数据库做运算 别让脚趾头想事情，那是脑瓜子的职责 让数据库多做她擅长的事: 尽量不在数据库做运算 复杂运算秱到程序端 CPU 尽可能简单应用 MySQL 举例: md5() &#x2F; Order by Ra...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"MySQL","slug":"MySQL","count":4,"path":"api/categories/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":4,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%80%E5%8F%91%E7%9A%84%E4%B8%89%E5%8D%81%E5%85%AD%E6%9D%A1%E5%86%9B%E8%A7%84\"><span class=\"toc-text\">MySQL 数据库开发的三十六条军规</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%A0%B8%E5%BF%83%E5%86%9B%E8%A7%84-5\"><span class=\"toc-text\">一、核心军规(5)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E5%B0%BD%E9%87%8F%E4%B8%8D%E5%9C%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E5%81%9A%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">1.1 尽量不在数据库做运算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E6%8E%A7%E5%88%B6%E5%8D%95%E8%A1%A8%E6%95%B0%E6%8D%AE%E9%87%8F\"><span class=\"toc-text\">1.2 控制单表数据量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E4%BF%9D%E6%8C%81%E8%A1%A8%E8%BA%AB%E6%AE%B5%E8%8B%97%E6%9D%A1\"><span class=\"toc-text\">1.3 保持表身段苗条</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E5%B9%B3%E8%A1%A1%E8%8C%83%E5%BC%8F%E4%B8%8D%E5%86%97%E4%BD%99\"><span class=\"toc-text\">1.4 平衡范式不冗余</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-%E6%8B%92%E7%BB%9D-3B\"><span class=\"toc-text\">1.5 拒绝 3B</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-6-%E6%A0%B8%E5%BF%83%E5%86%9B%E8%A7%84%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">1.6 核心军规小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%86%9B%E8%A7%84-6\"><span class=\"toc-text\">二、字段类军规(6)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E7%94%A8%E5%A5%BD%E6%95%B0%E5%80%BC%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">2.1 用好数值字段类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%B0%86%E5%AD%97%E7%AC%A6%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%95%B0%E5%AD%97\"><span class=\"toc-text\">2.2 将字符转化为数字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E4%BC%98%E5%85%88%E4%BD%BF%E7%94%A8-ENUM-%E6%88%96-SET\"><span class=\"toc-text\">2.3 优先使用 ENUM 或 SET</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E9%81%BF%E5%85%8D%E4%BD%BF%E7%94%A8-NULL-%E5%AD%97%E6%AE%B5\"><span class=\"toc-text\">2.4 避免使用 NULL 字段</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E5%B0%91%E7%94%A8%E5%B9%B6%E6%8B%86%E5%88%86-TEXT-x2F-BLOB\"><span class=\"toc-text\">2.5 少用并拆分 TEXT&#x2F;BLOB</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-%E4%B8%8D%E5%9C%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E9%87%8C%E5%AD%98%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">2.6 不在数据库里存图片</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-7-%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%86%9B%E8%A7%84%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">2.7 字段类军规小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E7%B4%A2%E5%BC%95%E7%B1%BB%E5%86%9B%E8%A7%84-5\"><span class=\"toc-text\">三、索引类军规(5)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E8%B0%A8%E6%85%8E%E5%90%88%E7%90%86%E6%B7%BB%E5%8A%A0%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">3.1 谨慎合理添加索引</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%AD%97%E7%AC%A6%E5%AD%97%E6%AE%B5%E5%BF%85%E9%A1%BB%E5%BB%BA%E5%89%8D%E7%BC%80%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">3.2 字符字段必须建前缀索引</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E4%B8%8D%E5%9C%A8%E7%B4%A2%E5%BC%95%E5%88%97%E5%81%9A%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">3.3 不在索引列做运算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E8%87%AA%E5%A2%9E%E5%88%97%E6%88%96%E5%85%A8%E5%B1%80-ID-%E5%81%9A-INNODB-%E4%B8%BB%E9%94%AE\"><span class=\"toc-text\">3.4 自增列或全局 ID 做 INNODB 主键</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-%E5%B0%BD%E9%87%8F%E4%B8%8D%E7%94%A8%E5%A4%96%E9%94%AE\"><span class=\"toc-text\">3.5 尽量不用外键</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-6-%E7%B4%A2%E5%BC%95%E7%B1%BB%E5%86%9B%E8%A7%84%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">3.6 索引类军规小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81SQL-%E7%B1%BB%E5%86%9B%E8%A7%84-15\"><span class=\"toc-text\">四、SQL 类军规(15)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-SQL-%E8%AF%AD%E5%8F%A5%E5%B0%BD%E5%8F%AF%E8%83%BD%E7%AE%80%E5%8D%95\"><span class=\"toc-text\">4.1 SQL 语句尽可能简单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E4%BF%9D%E6%8C%81%E4%BA%8B%E5%8A%A1-%E8%BF%9E%E6%8E%A5-%E7%9F%AD%E5%B0%8F\"><span class=\"toc-text\">4.2 保持事务(连接)短小</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E5%B0%BD%E5%8F%AF%E8%83%BD%E9%81%BF%E5%85%8D%E4%BD%BF%E7%94%A8-SP-x2F-TRIG-x2F-FUNC\"><span class=\"toc-text\">4.3 尽可能避免使用 SP&#x2F;TRIG&#x2F;FUNC</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E5%B0%BD%E9%87%8F%E4%B8%8D%E7%94%A8-SELECT\"><span class=\"toc-text\">4.4 尽量不用 SELECT</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-%E6%94%B9%E5%86%99-OR-%E4%B8%BA-IN\"><span class=\"toc-text\">4.5 改写 OR 为 IN()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-6-%E6%94%B9%E5%86%99-OR-%E4%B8%BA-UNION\"><span class=\"toc-text\">4.6 改写 OR 为 UNION</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-7-%E9%81%BF%E5%85%8D%E8%B4%9F%E5%90%91%E6%9F%A5%E8%AF%A2%E5%92%8C-%E5%89%8D%E7%BC%80%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">4.7 避免负向查询和% 前缀模糊查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-8-COUNT-%E7%9A%84%E5%87%A0%E4%B8%AA%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">4.8 COUNT(*)的几个例子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-9-%E5%87%8F%E5%B0%91-COUNT\"><span class=\"toc-text\">4.9 减少 COUNT(*)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-10-LIMIT-%E9%AB%98%E6%95%88%E5%88%86%E9%A1%B5\"><span class=\"toc-text\">4.10 LIMIT 高效分页</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-11-%E7%94%A8-UNION-ALL-%E8%80%8C%E9%9D%9E-UNION\"><span class=\"toc-text\">4.11 用 UNION ALL 而非 UNION</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-12-%E5%88%86%E8%A7%A3%E8%81%94%E6%8E%A5%E4%BF%9D%E8%AF%81%E9%AB%98%E5%B9%B6%E5%8F%91\"><span class=\"toc-text\">4.12 分解联接保证高并发</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-13-GROUP-BY-%E5%8E%BB%E9%99%A4%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">4.13 GROUP BY 去除排序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-14-%E5%90%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%88%97%E5%80%BC%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">4.14 同数据类型的列值比较</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-15-Load-data-%E5%AF%BC%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">4.15 Load data 导数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-16-%E6%89%93%E6%95%A3%E5%A4%A7%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">4.16 打散大批量更新</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-17-Know-Every-SQL\"><span class=\"toc-text\">4.17 Know Every SQL</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-18-SQL-%E7%B1%BB%E5%86%9B%E8%A7%84%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">4.18 SQL 类军规小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E7%BA%A6%E5%AE%9A%E7%B1%BB%E5%86%9B%E8%A7%84-5\"><span class=\"toc-text\">五、约定类军规(5)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E9%9A%94%E7%A6%BB%E7%BA%BF%E4%B8%8A%E7%BA%BF%E4%B8%8B\"><span class=\"toc-text\">5.1 隔离线上线下</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E7%A6%81%E6%AD%A2%E6%9C%AA%E7%BB%8F-DBA-%E7%A1%AE%E8%AE%A4%E7%9A%84%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">5.2 禁止未经 DBA 确认的子查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-%E6%B0%B8%E8%BF%9C%E4%B8%8D%E5%9C%A8%E7%A8%8B%E5%BA%8F%E7%AB%AF%E6%98%BE%E5%BC%8F%E5%8A%A0%E9%94%81\"><span class=\"toc-text\">5.3 永远不在程序端显式加锁</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-4-%E7%BB%9F%E4%B8%80%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%BA-UTF8\"><span class=\"toc-text\">5.4 统一字符集为 UTF8</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-5-%E7%BB%9F%E4%B8%80%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">5.5 统一命名规范</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-6-%E6%B3%A8%E6%84%8F%E9%81%BF%E5%85%8D%E7%94%A8%E4%BF%9D%E7%95%99%E5%AD%97%E5%91%BD%E5%90%8D\"><span class=\"toc-text\">5.6 注意避免用保留字命名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-7-%E7%BA%A6%E5%AE%9A%E7%B1%BB%E5%86%9B%E8%A7%84%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">5.7 约定类军规小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">六、原文链接</span></a></li></ol></li></ol>","author":{"name":"Anchor","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/heyshoop/imageRepository@master/images/202212281657361.png","link":"/","description":"新生代农民工 <br /> 技术无产阶级 <br /> @ <b>微信：Alihai5</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Mybatis一级缓存导致的内存溢出","uid":"d8253a8b0f6101721f69eb1f7316985f","slug":"Java/Mybatis一级缓存导致的内存溢出","date":"2018-09-29T12:06:29.000Z","updated":"2022-12-29T02:21:21.894Z","comments":true,"path":"api/articles/Java/Mybatis一级缓存导致的内存溢出.json","keywords":"阿里孩舞,五月西恩,Anchor,阁楼麻雀,码农,程序猿,JAVA","cover":"/medias/dva.jpg","text":" 接上篇 Druid 监控导致的内存溢出问题定位处理 JVM 内存溢出相关，废话不多说直接上分析过程。 1、服务器内存快照分析 首先通过快照查看最大的二十个对象如下图： 根据反馈数据可以发现前十个对象大小基本差不多，猜测应该由一个问题导致，点击去进一步定位问题。 2、定位引起内存...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":5,"path":"api/categories/JAVA.json"}],"tags":[{"name":"JVM","slug":"JVM","count":2,"path":"api/tags/JVM.json"},{"name":"OOM","slug":"OOM","count":2,"path":"api/tags/OOM.json"},{"name":"Mybatis","slug":"Mybatis","count":1,"path":"api/tags/Mybatis.json"}],"author":{"name":"Anchor","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/heyshoop/imageRepository@master/images/202212281657361.png","link":"/","description":"新生代农民工 <br /> 技术无产阶级 <br /> @ <b>微信：Alihai5</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}